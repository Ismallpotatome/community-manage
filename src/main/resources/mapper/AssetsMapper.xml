<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.manage.mapper.AssetsMapper">
  <resultMap id="BaseResultMap" type="com.community.manage.domain.entity.Assets">
    <!--@mbg.generated-->
    <!--@Table assets-->
    <id column="assets_id" jdbcType="INTEGER" property="assetsId" />
    <result column="community_id" jdbcType="INTEGER" property="communityId" />
    <result column="assets_num" jdbcType="VARCHAR" property="assetsNum" />
    <result column="assets_name" jdbcType="VARCHAR" property="assetsName" />
    <result column="assets_brand" jdbcType="VARCHAR" property="assetsBrand" />
    <result column="assets_purchase_price" jdbcType="DECIMAL" property="assetsPurchasePrice" />
    <result column="assets_purchase_quantity" jdbcType="INTEGER" property="assetsPurchaseQuantity" />
    <result column="assets_life" jdbcType="INTEGER" property="assetsLife" />
    <result column="assets_establish_date" jdbcType="TIMESTAMP" property="assetsEstablishDate" />
    <result column="assets_status" jdbcType="INTEGER" property="assetsStatus" />
  </resultMap>

  <resultMap extends="BaseResultMap" id="AssetsBeanResultMap" type="com.community.manage.domain.vo.AssetsBean">
    <association property="community" resultMap="com.community.manage.mapper.CommunityMapper.BaseResultMap" />
  </resultMap>

  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    assets_id, community_id, assets_num, assets_name, assets_brand, assets_purchase_price, 
    assets_purchase_quantity, assets_life, assets_establish_date, assets_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from assets
    where assets_id = #{assetsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from assets
    where assets_id = #{assetsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="assets_id" keyProperty="assetsId" parameterType="com.community.manage.domain.entity.Assets" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into assets (community_id, assets_num, assets_name, 
      assets_brand, assets_purchase_price, assets_purchase_quantity, 
      assets_life, assets_establish_date, assets_status
      )
    values (#{communityId,jdbcType=INTEGER}, #{assetsNum,jdbcType=VARCHAR}, #{assetsName,jdbcType=VARCHAR}, 
      #{assetsBrand,jdbcType=VARCHAR}, #{assetsPurchasePrice,jdbcType=DECIMAL}, #{assetsPurchaseQuantity,jdbcType=INTEGER}, 
      #{assetsLife,jdbcType=INTEGER}, #{assetsEstablishDate,jdbcType=TIMESTAMP}, #{assetsStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="assets_id" keyProperty="assetsId" parameterType="com.community.manage.domain.entity.Assets" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into assets
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="communityId != null">
        community_id,
      </if>
      <if test="assetsNum != null">
        assets_num,
      </if>
      <if test="assetsName != null">
        assets_name,
      </if>
      <if test="assetsBrand != null">
        assets_brand,
      </if>
      <if test="assetsPurchasePrice != null">
        assets_purchase_price,
      </if>
      <if test="assetsPurchaseQuantity != null">
        assets_purchase_quantity,
      </if>
      <if test="assetsLife != null">
        assets_life,
      </if>
      <if test="assetsEstablishDate != null">
        assets_establish_date,
      </if>
      <if test="assetsStatus != null">
        assets_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="communityId != null">
        #{communityId,jdbcType=INTEGER},
      </if>
      <if test="assetsNum != null">
        #{assetsNum,jdbcType=VARCHAR},
      </if>
      <if test="assetsName != null">
        #{assetsName,jdbcType=VARCHAR},
      </if>
      <if test="assetsBrand != null">
        #{assetsBrand,jdbcType=VARCHAR},
      </if>
      <if test="assetsPurchasePrice != null">
        #{assetsPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="assetsPurchaseQuantity != null">
        #{assetsPurchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="assetsLife != null">
        #{assetsLife,jdbcType=INTEGER},
      </if>
      <if test="assetsEstablishDate != null">
        #{assetsEstablishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="assetsStatus != null">
        #{assetsStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.manage.domain.entity.Assets">
    <!--@mbg.generated-->
    update assets
    <set>
      <if test="communityId != null">
        community_id = #{communityId,jdbcType=INTEGER},
      </if>
      <if test="assetsNum != null">
        assets_num = #{assetsNum,jdbcType=VARCHAR},
      </if>
      <if test="assetsName != null">
        assets_name = #{assetsName,jdbcType=VARCHAR},
      </if>
      <if test="assetsBrand != null">
        assets_brand = #{assetsBrand,jdbcType=VARCHAR},
      </if>
      <if test="assetsPurchasePrice != null">
        assets_purchase_price = #{assetsPurchasePrice,jdbcType=DECIMAL},
      </if>
      <if test="assetsPurchaseQuantity != null">
        assets_purchase_quantity = #{assetsPurchaseQuantity,jdbcType=INTEGER},
      </if>
      <if test="assetsLife != null">
        assets_life = #{assetsLife,jdbcType=INTEGER},
      </if>
      <if test="assetsEstablishDate != null">
        assets_establish_date = #{assetsEstablishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="assetsStatus != null">
        assets_status = #{assetsStatus,jdbcType=INTEGER},
      </if>
    </set>
    where assets_id = #{assetsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.manage.domain.entity.Assets">
    <!--@mbg.generated-->
    update assets
    set community_id = #{communityId,jdbcType=INTEGER},
      assets_num = #{assetsNum,jdbcType=VARCHAR},
      assets_name = #{assetsName,jdbcType=VARCHAR},
      assets_brand = #{assetsBrand,jdbcType=VARCHAR},
      assets_purchase_price = #{assetsPurchasePrice,jdbcType=DECIMAL},
      assets_purchase_quantity = #{assetsPurchaseQuantity,jdbcType=INTEGER},
      assets_life = #{assetsLife,jdbcType=INTEGER},
      assets_establish_date = #{assetsEstablishDate,jdbcType=TIMESTAMP},
      assets_status = #{assetsStatus,jdbcType=INTEGER}
    where assets_id = #{assetsId,jdbcType=INTEGER}
  </update>

    <select id="selectAll" resultMap="AssetsBeanResultMap">
        SELECT a.assets_id, a.community_id, a.assets_num, a.assets_name,
        a.assets_brand, a.assets_purchase_price, a.assets_purchase_quantity, a.assets_life,
        a.assets_establish_date, a.assets_status, c.community_name
        FROM assets a LEFT JOIN community c ON a.community_id = c.community_id
    </select>

    <select id="selectByKey" resultMap="AssetsBeanResultMap">
         SELECT a.assets_id, a.community_id, a.assets_num, a.assets_name,
        a.assets_brand, a.assets_purchase_price, a.assets_purchase_quantity, a.assets_life,
        a.assets_establish_date, a.assets_status, c.community_name
        FROM assets a LEFT JOIN community c ON a.community_id = c.community_id
        <trim prefix="WHERE" prefixOverrides="and">
          <if test="assetsSearchDto.keywords != null and assetsSearchDto.keywords != ''">
            (a.assets_name LIKE concat('%',#{assetsSearchDto.keywords},'%')
            OR c.community_name LIKE concat('%',#{assetsSearchDto.keywords},'%'))
          </if>
          <if test="assetsSearchDto.startTime != null or assetsSearchDto.endTime != null">
            <if test="assetsSearchDto.startTime != null">
            AND  #{assetsSearchDto.startTime} >
            </if>
            a.assets_establish_date
            <if test="assetsSearchDto.endTime != null">
              > #{assetsSearchDto.endTime}
            </if>
          </if>
        </trim>
    </select>

  <update id="updateStatusById">
    UPDATE assets SET assets_status=0
    WHERE assets_id=#{assetsId}
  </update>

  <update id="updateStatusByIds">
    UPDATE assets SET assets_status=0
    WHERE assets_id IN
    <foreach collection="assetsIds" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </update>
</mapper>