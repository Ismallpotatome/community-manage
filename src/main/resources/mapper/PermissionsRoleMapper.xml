<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.manage.mapper.PermissionsRoleMapper">
  <resultMap id="BaseResultMap" type="com.community.manage.domain.entity.PermissionsRole">
    <!--@mbg.generated-->
    <!--@Table permissions_role-->
    <id column="permissions_role_id" jdbcType="INTEGER" property="permissionsRoleId" />
    <result column="permissions_role_pid" jdbcType="INTEGER" property="permissionsRolePid" />
    <result column="permissions_role_rid" jdbcType="INTEGER" property="permissionsRoleRid" />
    <result column="permissions_role_createtime" jdbcType="DATE" property="permissionsRoleCreatetime" />
    <result column="permissions_role_updatetime" jdbcType="DATE" property="permissionsRoleUpdatetime" />
    <result column="permissions_role_status" jdbcType="INTEGER" property="permissionsRoleStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    permissions_role_id, permissions_role_pid, permissions_role_rid, permissions_role_createtime, 
    permissions_role_updatetime, permissions_role_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from permissions_role
    where permissions_role_id = #{permissionsRoleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from permissions_role
    where permissions_role_id = #{permissionsRoleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="permissions_role_id" keyProperty="permissionsRoleId" parameterType="com.community.manage.domain.entity.PermissionsRole" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into permissions_role (permissions_role_pid, permissions_role_rid, 
      permissions_role_createtime, permissions_role_updatetime, 
      permissions_role_status)
    values (#{permissionsRolePid,jdbcType=INTEGER}, #{permissionsRoleRid,jdbcType=INTEGER}, 
      #{permissionsRoleCreatetime,jdbcType=DATE}, #{permissionsRoleUpdatetime,jdbcType=DATE}, 
      #{permissionsRoleStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="permissions_role_id" keyProperty="permissionsRoleId" parameterType="com.community.manage.domain.entity.PermissionsRole" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into permissions_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="permissionsRolePid != null">
        permissions_role_pid,
      </if>
      <if test="permissionsRoleRid != null">
        permissions_role_rid,
      </if>
      <if test="permissionsRoleCreatetime != null">
        permissions_role_createtime,
      </if>
      <if test="permissionsRoleUpdatetime != null">
        permissions_role_updatetime,
      </if>
      <if test="permissionsRoleStatus != null">
        permissions_role_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="permissionsRolePid != null">
        #{permissionsRolePid,jdbcType=INTEGER},
      </if>
      <if test="permissionsRoleRid != null">
        #{permissionsRoleRid,jdbcType=INTEGER},
      </if>
      <if test="permissionsRoleCreatetime != null">
        #{permissionsRoleCreatetime,jdbcType=DATE},
      </if>
      <if test="permissionsRoleUpdatetime != null">
        #{permissionsRoleUpdatetime,jdbcType=DATE},
      </if>
      <if test="permissionsRoleStatus != null">
        #{permissionsRoleStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.manage.domain.entity.PermissionsRole">
    <!--@mbg.generated-->
    update permissions_role
    <set>
      <if test="permissionsRolePid != null">
        permissions_role_pid = #{permissionsRolePid,jdbcType=INTEGER},
      </if>
      <if test="permissionsRoleRid != null">
        permissions_role_rid = #{permissionsRoleRid,jdbcType=INTEGER},
      </if>
      <if test="permissionsRoleCreatetime != null">
        permissions_role_createtime = #{permissionsRoleCreatetime,jdbcType=DATE},
      </if>
      <if test="permissionsRoleUpdatetime != null">
        permissions_role_updatetime = #{permissionsRoleUpdatetime,jdbcType=DATE},
      </if>
      <if test="permissionsRoleStatus != null">
        permissions_role_status = #{permissionsRoleStatus,jdbcType=INTEGER},
      </if>
    </set>
    where permissions_role_id = #{permissionsRoleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.manage.domain.entity.PermissionsRole">
    <!--@mbg.generated-->
    update permissions_role
    set permissions_role_pid = #{permissionsRolePid,jdbcType=INTEGER},
      permissions_role_rid = #{permissionsRoleRid,jdbcType=INTEGER},
      permissions_role_createtime = #{permissionsRoleCreatetime,jdbcType=DATE},
      permissions_role_updatetime = #{permissionsRoleUpdatetime,jdbcType=DATE},
      permissions_role_status = #{permissionsRoleStatus,jdbcType=INTEGER}
    where permissions_role_id = #{permissionsRoleId,jdbcType=INTEGER}
  </update>
</mapper>