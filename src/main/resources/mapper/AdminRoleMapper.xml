<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.community.manage.mapper.AdminRoleMapper">
  <resultMap id="BaseResultMap" type="com.community.manage.domain.entity.AdminRole">
    <!--@mbg.generated-->
    <!--@Table admin_role-->
    <id column="admin_role_id" jdbcType="INTEGER" property="adminRoleId" />
    <result column="admin_role_name" jdbcType="VARCHAR" property="adminRoleName" />
    <result column="admin_role_describe" jdbcType="VARCHAR" property="adminRoleDescribe" />
    <result column="admin_role_createtime" jdbcType="DATE" property="adminRoleCreatetime" />
    <result column="admin_role_updatetime" jdbcType="DATE" property="adminRoleUpdatetime" />
    <result column="admin_role_status" jdbcType="INTEGER" property="adminRoleStatus" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    admin_role_id, admin_role_name, admin_role_describe, admin_role_createtime, admin_role_updatetime, 
    admin_role_status
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from admin_role
    where admin_role_id = #{adminRoleId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from admin_role
    where admin_role_id = #{adminRoleId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="admin_role_id" keyProperty="adminRoleId" parameterType="com.community.manage.domain.entity.AdminRole" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into admin_role (admin_role_name, admin_role_describe, 
      admin_role_createtime, admin_role_updatetime, admin_role_status
      )
    values (#{adminRoleName,jdbcType=VARCHAR}, #{adminRoleDescribe,jdbcType=VARCHAR}, 
      #{adminRoleCreatetime,jdbcType=DATE}, #{adminRoleUpdatetime,jdbcType=DATE}, #{adminRoleStatus,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" keyColumn="admin_role_id" keyProperty="adminRoleId" parameterType="com.community.manage.domain.entity.AdminRole" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into admin_role
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="adminRoleName != null">
        admin_role_name,
      </if>
      <if test="adminRoleDescribe != null">
        admin_role_describe,
      </if>
      <if test="adminRoleCreatetime != null">
        admin_role_createtime,
      </if>
      <if test="adminRoleUpdatetime != null">
        admin_role_updatetime,
      </if>
      <if test="adminRoleStatus != null">
        admin_role_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="adminRoleName != null">
        #{adminRoleName,jdbcType=VARCHAR},
      </if>
      <if test="adminRoleDescribe != null">
        #{adminRoleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="adminRoleCreatetime != null">
        #{adminRoleCreatetime,jdbcType=DATE},
      </if>
      <if test="adminRoleUpdatetime != null">
        #{adminRoleUpdatetime,jdbcType=DATE},
      </if>
      <if test="adminRoleStatus != null">
        #{adminRoleStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.community.manage.domain.entity.AdminRole">
    <!--@mbg.generated-->
    update admin_role
    <set>
      <if test="adminRoleName != null">
        admin_role_name = #{adminRoleName,jdbcType=VARCHAR},
      </if>
      <if test="adminRoleDescribe != null">
        admin_role_describe = #{adminRoleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="adminRoleCreatetime != null">
        admin_role_createtime = #{adminRoleCreatetime,jdbcType=DATE},
      </if>
      <if test="adminRoleUpdatetime != null">
        admin_role_updatetime = #{adminRoleUpdatetime,jdbcType=DATE},
      </if>
      <if test="adminRoleStatus != null">
        admin_role_status = #{adminRoleStatus,jdbcType=INTEGER},
      </if>
    </set>
    where admin_role_id = #{adminRoleId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.community.manage.domain.entity.AdminRole">
    <!--@mbg.generated-->
    update admin_role
    set admin_role_name = #{adminRoleName,jdbcType=VARCHAR},
      admin_role_describe = #{adminRoleDescribe,jdbcType=VARCHAR},
      admin_role_createtime = #{adminRoleCreatetime,jdbcType=DATE},
      admin_role_updatetime = #{adminRoleUpdatetime,jdbcType=DATE},
      admin_role_status = #{adminRoleStatus,jdbcType=INTEGER}
    where admin_role_id = #{adminRoleId,jdbcType=INTEGER}
  </update>
</mapper>